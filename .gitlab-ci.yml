stages:
  - php-cs
  - test
  - build
  - release
  - deploy

cache:
  key: "ksearch"
  paths:
    - .composer-cache/

variables:
    CONTAINER_RELEASE_IMAGE_BASE: $CI_REGISTRY/images/k-search

.need_composer: &need_composer
  before_script:
    - export COMPOSER_CACHE_DIR=`pwd`/.composer-cache
    - php -v && composer --version
    - composer install --prefer-dist --no-interaction

##### Jobs
php-coding-and-tests:7.1:
  image: docker.klink.asia/main/docker-php:7.1
  <<: *need_composer
  stage: php-cs
  script:
    - mv /usr/local/etc/php/conf.d/docker-php-ext-xdebug.{ini,disabled}
    - scripts/run_phpcs.sh
    - bin/console > /dev/null
    - scripts/run_phpunit.sh
  tags:
    - docker

## Normal branch release, we create local images for being used during tests
branch_release:
  stage: release
  script:
    - docker login -u gitlab-ci-token -p $CI_JOB_TOKEN $CI_REGISTRY
    - docker build -t $CI_REGISTRY_IMAGE:${CI_COMMIT_REF_NAME#v} .
    - docker push $CI_REGISTRY_IMAGE:${CI_COMMIT_REF_NAME#v}
  tags:
    - dind
  except:
    - tags
  when: manual

## Tagged releases
tagged_release:
  stage: release
  script:
    - docker login -u $REGISTRY_RELEASE_USERNAME -p $REGISTRY_RELEASE_PASSWORD $CI_REGISTRY
    - docker build -t $CONTAINER_RELEASE_IMAGE_BASE:${CI_COMMIT_REF_NAME#v} .
    - docker tag  $CONTAINER_RELEASE_IMAGE_BASE:${CI_COMMIT_REF_NAME#v} "$CONTAINER_RELEASE_IMAGE_BASE:latest"
    - docker push $CONTAINER_RELEASE_IMAGE_BASE:${CI_COMMIT_REF_NAME#v}
    - docker push "$CONTAINER_RELEASE_IMAGE_BASE:latest"
  tags:
    - dind
  only:
    - tags

## the instance on test.slmtj.net
test_slmtj_net_deploy:
  environment: Integration
  when: manual
  stage: deploy
  tags:
    - shell
    - deploy
  dependencies:
    - branch_release
  script:
    - docker login -u gitlab-ci-token -p $CI_JOB_TOKEN $CI_REGISTRY
    - docker pull $CI_REGISTRY_IMAGE:${CI_COMMIT_REF_NAME#v}
    - cd ${INTEGRATION_DOCKER_FOLDER}
    - docker tag $CI_REGISTRY_IMAGE:${CI_COMMIT_REF_NAME#v} $INTEGRATION_DOCKER_IMAGE
    - docker-compose down && docker-compose up -d

## the instance on test.slmtj.net
test_klink_asia_deploy:
  environment: Integration
  when: manual
  stage: deploy
  tags:
    - shell
    - deploy
  dependencies:
    - branch_release
  script:
    - docker login -u gitlab-ci-token -p $CI_JOB_TOKEN $CI_REGISTRY
    - docker pull $CI_REGISTRY_IMAGE:${CI_COMMIT_REF_NAME#v}
    - cd ${REVISION_DOCKER_FOLDER}
    - docker tag $CI_REGISTRY_IMAGE:${CI_COMMIT_REF_NAME#v} $REVISION_DOCKER_IMAGE
    - docker-compose down && docker-compose up -d

