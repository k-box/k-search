stages:
  - test
  - build
  - release
  - deploy

cache:
  key: "ksearch"
  paths:
    - .composer-cache/

variables:
  CONTAINER_RELEASE_IMAGE_BASE: $CI_REGISTRY/images/k-search

before_script:
  - export IMAGE_TAG="${CI_COMMIT_REF_NAME#v}_${CI_COMMIT_SHA:0:10}"
  - export CLEANED_CI_COMMIT_REF_NAME="${CI_COMMIT_REF_NAME#v}"
  - export COMPOSER_CACHE_DIR=`pwd`/.composer-cache

##### Jobs
php-coding-and-tests:
  image: edbizarro/gitlab-ci-pipeline-php:7.2
  stage: test
  script:
    - php -v && composer --version
    - composer install --prefer-dist --no-ansi --no-interaction --no-progress --optimize-autoloader
    - scripts/run_phpcs.sh
    - bin/console > /dev/null
    - scripts/run_test_migrations.sh
    - scripts/run_test.sh
  tags:
    - docker

## Normal branch release, we create local images for being used during tests
branch_release:
  stage: release
  script:
    - docker login -u gitlab-ci-token -p $CI_JOB_TOKEN $CI_REGISTRY
    - docker build -t $CI_REGISTRY_IMAGE:${IMAGE_TAG} .
    - docker push $CI_REGISTRY_IMAGE:${IMAGE_TAG}
  tags:
    - dind
  except:
    - tags
  when: manual

## Tagged releases
tagged_release:
  stage: release
  script:
    - docker login -u $REGISTRY_RELEASE_USERNAME -p $REGISTRY_RELEASE_PASSWORD $CI_REGISTRY
    - docker build -t $CONTAINER_RELEASE_IMAGE_BASE:${CI_COMMIT_REF_NAME#v} .
    - docker tag  $CONTAINER_RELEASE_IMAGE_BASE:${CI_COMMIT_REF_NAME#v} "$CONTAINER_RELEASE_IMAGE_BASE:latest"
    - docker push $CONTAINER_RELEASE_IMAGE_BASE:${CI_COMMIT_REF_NAME#v}
    - docker push "$CONTAINER_RELEASE_IMAGE_BASE:latest"
  tags:
    - dind
  only:
    - tags

## Deploy on canary environments
.canary_deploy: &canary_deploy
  when: manual
  stage: deploy
  tags:
    - shell
    - deploy
  script:
    - DEPLOY_TAG=$([ -z "${CI_COMMIT_TAG}" ] && echo "${IMAGE_TAG}" || echo "${CLEANED_CI_COMMIT_REF_NAME}")
    - DEPLOY_REGISTRY=$([ -z "${CI_COMMIT_TAG}" ] && echo "${CI_REGISTRY_IMAGE}" || echo "${CONTAINER_RELEASE_IMAGE_BASE}")
    - echo "Deploying ${DEPLOY_REGISTRY} - ${DEPLOY_TAG}..."
    - docker login -u $REGISTRY_RELEASE_USERNAME -p $REGISTRY_RELEASE_PASSWORD $CI_REGISTRY
    - docker pull $DEPLOY_REGISTRY:${DEPLOY_TAG}
    - cd $DEPLOY_FOLDER
    - docker tag $DEPLOY_REGISTRY:${DEPLOY_TAG} $DEPLOY_IMAGE
    - docker-compose down -v && docker-compose up -d

canary_manfred_deploy:
  <<: *canary_deploy
  environment: "Canary Manfred"
  variables:
    DEPLOY_FOLDER: $CANARY_M_FOLDER
    DEPLOY_IMAGE: $CANARY_M_IMAGE

canary_filomena_deploy:
  <<: *canary_deploy
  environment: "Canary Filomena"
  variables:
    DEPLOY_FOLDER: $CANARY_F_FOLDER
    DEPLOY_IMAGE: $CANARY_F_IMAGE

canary_juliet_deploy:
  <<: *canary_deploy
  environment: "Canary Juliet"
  variables:
    DEPLOY_FOLDER: $CANARY_J_FOLDER
    DEPLOY_IMAGE: $CANARY_J_IMAGE

canary_try_deploy:
  <<: *canary_deploy
  environment: "Staging"
  variables:
    DEPLOY_FOLDER: $STAGING_T_FOLDER
    DEPLOY_IMAGE: $STAGING_T_IMAGE
  only:
    - tags
